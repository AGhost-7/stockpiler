
# playbook sets up a "secure" docker registry with self signed certificates.
# Generating a self signed ip-based certification
# https://github.com/docker/distribution/issues/948
- hosts: all
  tasks:

    - name: use insecure registry
      become: yes
      register: daemon_config
      template:
        dest: /etc/docker/daemon.json
        src: templates/daemon.json.j2

    - name: restart daemon
      become: yes
      when: daemon_config.changed
      systemd:
        state: restarted
        name: docker

    - name: use insecure local registry
      delegate_to: localhost
      become: yes
      register: daemon_config
      template:
        dest: /etc/docker/daemon.json
        src: templates/daemon.json.j2

    - name: restart local daemon
      delegate_to: localhost
      become: yes
      when: daemon_config.changed
      systemd:
        state: restarted
        name: docker

#    - name: copy registry cert file to all machines
#      become: yes
#      register: registry_cert
#      copy:
#        src: "{{docker_registry_cert_file}}"
#        dest: /usr/local/share/ca-certificates/docker_registry.crt
#
#    - name: refresh machine certificates
#      become: yes
#      when: registry_cert.changed
#      command: update-ca-certificates
#
#    - name: create registry config dir
#      become: yes
#      when: inventory_hostname in groups['registry']
#      file:
#        state: directory
#        path: /etc/registry/certs
#
#    - name: copy registry cert
#      become: yes
#      when: inventory_hostname in groups['registry']
#      copy:
#        src: "{{docker_registry_cert_file}}"
#        dest: /etc/registry/certs/domain.crt
#
#    - name: copy registry key
#      become: yes
#      when: inventory_hostname in groups['registry']
#      copy:
#        src: "{{docker_registry_key_file}}"
#        dest: /etc/registry/certs/domain.key

    - name: bring up the registry
      become: yes
      when: inventory_hostname in groups['registry']
      docker_container:
        name: registry
        restart_policy: "{{docker_default_restart_policy}}"
        state: started
        image: registry:2
        log_driver: "{{docker_log_driver}}"
        #env:
        #  REGISTRY_HTTP_TLS_CERTIFICATE: /certs/domain.crt
        #  REGISTRY_HTTP_TLS_KEY: /certs/domain.key
        volumes:
        #  - /etc/registry/certs:/certs
          - /var/lib/registry:/var/lib/registry
        ports:
          - "{{docker_registry_port}}:5000"

    - name: open the firewall for the registry
      become: yes
      when: inventory_hostname in groups['registry']
      with_items: "{{groups['all']}}"
      ufw:
        from_ip: "{{item}}"
        rule: allow
        port: "{{docker_registry_port}}"
