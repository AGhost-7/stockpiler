
# spin up the buildbot ci/cd server out of thin air.

- hosts: buildbot
  tasks:

    - name: open the firewall for the web interface
      become: yes
      when: inventory_hostname in groups['buildbot_master']
      with_items: groups['front']
      ufw:
        rule: allow
        from_ip: "{{item}}"
        port: "{{buildbot_web_port}}"

    - name: open firewall for workers 
      become: yes
      when: inventory_hostname in groups['buildbot_worker']
      with_items: groups['buildbot_master']
      ufw:
        from_ip: "{{item}}"
        rule: allow
        port: 9989

    - name: Create config directory
      become: yes
      with_items:
        - workers
        - keys
      file:
        path: "{{buildbot_config_dir}}/{{item}}"
        state: directory

    - name: generate worker config
      become: yes
      template:
        dest: "{{buildbot_config_dir}}/workers/workers.json"
        src: templates/workers.json.j2

    - name: copy git key
      become: yes
      copy:
        src: "{{buildbot_git_private_key}}"
        dest: "{{buildbot_config_dir}}/keys/id_rsa"
        mode: 0600

    - name: generate known_hosts
      become: yes
      shell: ssh-keyscan github.com > /etc/buildbot/keys/known_hosts

    - name: build master image
      delegate_to: localhost
      register: buildbot_master_image
      docker_image:
        push: yes
        force: yes
        path: ../docker/buildbot-master
        name: "{{docker_registry_name}}/buildbot-master"

    - name: build worker image
      delegate_to: localhost
      register: buildbot_worker_image
      docker_image:
        push: yes
        force: yes
        path: ../docker/buildbot-worker
        name: "{{docker_registry_name}}/buildbot-worker"

    - name: master db container
      when: inventory_hostname in groups['buildbot_master']
      become: yes
      docker_container:
        name: buildbot_master_db
        image: "postgres:9.6"
        restart_policy: "{{docker_default_restart_policy}}"
        state: started
        log_driver: "{{docker_log_driver}}"
        env:
          POSTGRES_USER: "{{buildbot_postgres_user}}"
          POSTGRES_PASSWORD: "{{buildbot_postgres_password}}"
          POSTGRES_DB: "{{buildbot_postgres_db}}"
        ports:
          - "5432:5432"

    - name: master container
      when: inventory_hostname in groups['buildbot_master']
      become: yes
      docker_container:
        recreate: yes
        name: buildbot_master
        image: "{{buildbot_master_image.image['RepoDigests'][0]}}"
        restart_policy: "{{docker_default_restart_policy}}"
        state: started
        log_driver: "{{docker_log_driver}}"
        volumes:
          - "{{buildbot_config_dir}}/workers:/var/lib/buildbot/workers"
          - "{{buildbot_config_dir}}/keys:/root/.ssh"
        ports:
          - "9989:9989"
          - "{{buildbot_web_port}}:8010"
        env:
          BUILDBOT_DB_URL: "postgresql+psycopg2://{{buildbot_postgres_user}}:{{buildbot_postgres_password}}@{{groups['buildbot_master'][0]}}/{{buildbot_postgres_db}}"
          BUILDBOT_GIT_REPOSITORY: "{{buildbot_git_repository}}"
          BUILDBOT_URL: "http://{{inventory_hostname}}:{{buildbot_web_port}}/"

    - name: worker containers
      when: inventory_hostname in groups['buildbot_worker']
      become: yes
      docker_container:
        recreate: yes
        name: "worker{{groups.buildbot_worker.index(inventory_hostname)}}"
        image: "{{buildbot_worker_image.image['RepoDigests'][0]}}"
        restart_policy: "{{docker_default_restart_policy}}"
        state: started
        log_driver: "{{docker_log_driver}}"
        volumes:
          - "{{buildbot_config_dir}}/workers:/var/lib/buildbot/workers"
          - "{{buildbot_config_dir}}/keys:/root/.ssh"
          - "/run/docker.sock:/var/run/docker.sock"
        env:
          WORKERNAME: "worker{{groups.buildbot_worker.index(inventory_hostname)}}"
          WORKERPASS: "{{buildbot_worker_pass}}"
          BUILDMASTER: "{{groups['buildbot_master'][0]}}"
          BUILDMASTER_PORT: 9989
